# Server Configuration
server.port=8080
spring.application.name=app

# Database Configuration (PostgreSQL)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.driverClassName=org.postgresql.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Redis Configuration
spring.data.redis.host=${SPRING_REDIS_HOST:task-mangment-redis}
spring.data.redis.port=${SPRING_REDIS_PORT:6379}
spring.data.redis.timeout=2000ms
spring.data.redis.connection-timeout=2000ms

# Redis connection pool (optional but recommended)
spring.data.redis.lettuce.pool.max-active=8
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0

# Cache Configuration
spring.cache.type=redis
spring.cache.redis.cache-null-values=false
spring.cache.redis.time-to-live=1800000
spring.cache.redis.enable-statistics=true

# Kafka Configuration
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:task-mangment-kafka:9092}
spring.kafka.consumer.group-id=task-management-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.enable-idempotence=true

# Load local env properties file if present (not committed)
spring.config.import=optional:file:.env.properties

# Management/Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
management.health.defaults.enabled=true

# Logging Configuration (reduced for production)
logging.level.org.springframework.web=INFO
logging.level.com.company.app=INFO
logging.level.org.springframework.boot.actuate=INFO
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type=WARN