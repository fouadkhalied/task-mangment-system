name: Build and push container images to ACR, then deploy services to ACA

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Azure Infrastructure
        run: |
          RESOURCE_GROUP="task-mangment-system"
          ACR_NAME="${{ secrets.TASKMANGMENT_ACR_NAME }}"
          LOCATION="uaenorth"

          if ! az group show --name $RESOURCE_GROUP &> /dev/null; then
            az group create --name $RESOURCE_GROUP --location $LOCATION
          fi

          if ! az acr show --name $ACR_NAME --resource-group $RESOURCE_GROUP &> /dev/null; then
            az acr create --resource-group $RESOURCE_GROUP --name $ACR_NAME --sku Basic --admin-enabled true
          fi

          EXISTING_ENV=$(az containerapp env list --resource-group $RESOURCE_GROUP --query "[0].name" -o tsv)
          if [ -n "$EXISTING_ENV" ]; then
            echo "CONTAINER_APP_ENV=$EXISTING_ENV" >> $GITHUB_ENV
          else
            echo "No Container App Environment found!"
            exit 1
          fi

  # -------------------
  # Build per-service
  # -------------------
  build-zookeeper:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'zookeeper')
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and push Zookeeper image
        run: |
          IMAGE="${{ secrets.TASKMANGMENT_ACR_NAME }}.azurecr.io/task-mangment-zookeeper:${{ github.sha }}"
          az acr build --registry ${{ secrets.TASKMANGMENT_ACR_NAME }} --image $IMAGE ./zookeeper
      - name: Deploy Zookeeper
        run: |
          az containerapp update \
            --name task-mangment-zookeeper \
            --resource-group task-mangment-system \
            --image ${{ secrets.TASKMANGMENT_ACR_NAME }}.azurecr.io/task-mangment-zookeeper:${{ github.sha }} \
            --min-replicas 1 \
            --max-replicas 3

  build-kafka:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'kafka')
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and push Kafka image
        run: |
          IMAGE="${{ secrets.TASKMANGMENT_ACR_NAME }}.azurecr.io/task-mangment-kafka:${{ github.sha }}"
          az acr build --registry ${{ secrets.TASKMANGMENT_ACR_NAME }} --image $IMAGE ./kafka
      - name: Deploy Kafka
        run: |
          az containerapp update \
            --name task-mangment-kafka \
            --resource-group task-mangment-system \
            --image ${{ secrets.TASKMANGMENT_ACR_NAME }}.azurecr.io/task-mangment-kafka:${{ github.sha }} \
            --env-vars KAFKA_ZOOKEEPER_CONNECT=task-mangment-zookeeper:2181 \
                        KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://task-mangment-kafka:9092 \
                        KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 \
                        KAFKA_BROKER_ID=1 \
                        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1 \
            --min-replicas 1 \
            --max-replicas 3

  build-redis:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'redis')
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and push Redis image
        run: |
          IMAGE="${{ secrets.TASKMANGMENT_ACR_NAME }}.azurecr.io/task-mangment-redis:${{ github.sha }}"
          az acr build --registry ${{ secrets.TASKMANGMENT_ACR_NAME }} --image $IMAGE ./redis
      - name: Deploy Redis
        run: |
          az containerapp update \
            --name task-mangment-redis \
            --resource-group task-mangment-system \
            --image ${{ secrets.TASKMANGMENT_ACR_NAME }}.azurecr.io/task-mangment-redis:${{ github.sha }} \
            --min-replicas 1 \
            --max-replicas 3

  build-app:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.event_name == 'workflow_dispatch' || contains(github.event.head_commit.message, 'app')
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Build and push App image
        run: |
          IMAGE="${{ secrets.TASKMANGMENT_ACR_NAME }}.azurecr.io/task-mangment-app:${{ github.sha }}"
          az acr build --registry ${{ secrets.TASKMANGMENT_ACR_NAME }} --image $IMAGE ./app
      - name: Deploy App
        run: |
          az containerapp update \
            --name task-mangment-app \
            --resource-group task-mangment-system \
            --image ${{ secrets.TASKMANGMENT_ACR_NAME }}.azurecr.io/task-mangment-app:${{ github.sha }} \
            --env-vars SPRING_REDIS_HOST=task-mangment-redis \
                        SPRING_REDIS_PORT=6379 \
                        KAFKA_BOOTSTRAP_SERVERS=task-mangment-kafka:9092 \
                        SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
                        SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
                        SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
            --min-replicas 1 \
            --max-replicas 5
